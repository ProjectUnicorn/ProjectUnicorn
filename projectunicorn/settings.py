"""
Django settings for projectunicorn project.

Generated by 'django-admin startproject' using Django 1.10.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '@fcmuxzin7j&6(h@3(w)4&278&w^(b^q0ea#q=nv0scrdl=plx'

# SECURITY WARNING: don't run ANY of the following settings in TRUE in production!
DEBUG = True
DISABLE_ADFS_AUTH = False
DISABLE_EXTERNAL_DATABASE = False


ALLOWED_HOSTS = [
    'projectunicorn.test.aau.dk',
    'localhost',
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'applicationlist.apps.ApplicationlistConfig',
    'django_tables2',
    'django_filters',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if DISABLE_ADFS_AUTH == False:
    INSTALLED_APPS.append('django_auth_adfs')
    MIDDLEWARE.append('django_auth_adfs.middleware.LoginRequiredMiddleware')

ROOT_URLCONF = 'projectunicorn.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'projectunicorn.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
if DISABLE_EXTERNAL_DATABASE:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
                'ENGINE': 'django.db.backends.mysql',
            'OPTIONS': {
                'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
                'read_default_file': os.path.join(BASE_DIR, "../MySQL-Credentials.cnf")
            },
        }
    }


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = '/static/'

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error when DEBUG=False.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
#    'filters': {
#        'require_debug_false': {
#            '()': 'django.utils.log.RequireDebugFalse'
#        }
#    },
    'formatters': {
        'standard': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
    },
    'handlers': {
        'mail_admins': {
            'class': 'django.utils.log.AdminEmailHandler',
            'level': 'ERROR',
             'include_html': True,
        },
        'applicationlistlogfile': {
            'level': 'INFO',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, '../log/applicationlist.log'),
#            'filters': ['require_debug_false'],
            'maxBytes': 1024*1024*15, # 15MB
            'backupCount': 10,
            'formatter': 'standard',
        },
        'djangologfile': {
            'level': 'ERROR',
            'class':'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, '../log/django.log'),
#            'filters': ['require_debug_false'],
            'maxBytes': 1024*1024*15, # 15MB
            'backupCount': 10,
            'formatter': 'standard',
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'django': {
            'handlers': ['djangologfile'],
            'level': 'ERROR',
            'propagate': False,
        },
        'core': {
            'handlers': ['applicationlistlogfile'],
            'level': 'INFO',
            'propagate': False,
        }
    }
}

# REST-Framework
REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ]
}

if DISABLE_ADFS_AUTH == False:
    AUTHENTICATION_BACKENDS = (
        'django_auth_adfs.backend.AdfsBackend',
    )

AUTH_ADFS = {
    "SERVER": "adfs.srv.aau.dk",
    "CLIENT_ID": "Applist.id",
    "RESOURCE": "Applist.id",
    "AUTHORIZE_PATH": "/adfs/oauth2/authorize",
#    "AUDIENCE": "http://adfs.srv.aau.dk/adfs/services/trust",
    "ISSUER": "http://adfs.srv.aau.dk/adfs/services/trust",
   # "CA_BUNDLE": "/path/to/ca-bundle.pem",
    "CLAIM_MAPPING": {"first_name": "given_name", "last_name": "family_name", "email": "email"},
    "REDIR_URI": "https://projectunicorn.test.aau.dk/oauth2/login",
}
